---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

export interface Props
	extends HTMLAttributes<"button">,
		VariantProps<typeof button> {
	className?: HTMLHtmlElement["className"];
}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const {
	className = "",
	intent = "primary",
	size = "medium",
	variant = "filled",
	type = "submit",
} = Astro.props;

const button = cva(["font-medium"], {
	variants: {
		intent: {
			primary: [
				"bg-secondary",
				"text-white",
				"border-transparent",
				"hover:bg-blue-600",
			],
			secondary: [
				"bg-white",
				"text-gray-800",
				"border-gray-400",
				"hover:bg-gray-100",
			],
		},
		variant: {
			plain: [],
			bordered: [],
			filled: [],
		},
		size: {
			small: ["text-sm", "py-1", "px-2"],
			medium: ["text-base", "py-[1.2rem]"],
		},
	},
	compoundVariants: [
		// { intent: "primary", size: "medium", class: "uppercase" },
		{
			intent: "primary",
			variant: "bordered",
			class: "text-grey-200 bg-transparent border-2 border-secondary",
		},
	],
});
---

<button class={button({ intent, size, variant, className })} type={type}>
	<slot />
</button>
